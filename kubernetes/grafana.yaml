apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: grafana-data
              mountPath: /var/lib/grafana
            - name: spring-boot-dashboard
              mountPath: /var/lib/grafana/dashboards/spring-boot-dashboard.json
              subPath: spring-boot-dashboard.json
            - name: jvm-dashboard
              mountPath: /var/lib/grafana/dashboards/jvm-dashboard.json
              subPath: jvm-dashboard.json                            
      volumes:
        - name: grafana-data
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: spring-boot-dashboard
          configMap:
            name: spring-boot-dashboard
        - name: jvm-dashboard
          configMap:
            name: jvm-dashboard                        
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi #adjust storage as needed.